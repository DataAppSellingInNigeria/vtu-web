// src/components/wallet/receipt.ts
import type { Tx } from "../../hooks/useWallet";

/** Brand config — edit these to your real values */
export const BRAND = {
  name: "DahaTech",
  addressLine1: "Plot 12, Innovation Avenue",
  addressLine2: "Abuja, Nigeria",
  phone: "+234 800 000 0000",
  email: "support@dahatech.com",
  website: "https://dahatech.com",
  // Use an ABSOLUTE URL so it renders in print/iframe
  logoUrl: "../../assets/DT_logo1.png",
};

export function buildReceiptHTML(tx: Tx & { _orig?: any }) {
  const paidAt =
    tx._orig?.response?.paid_at ??
    tx._orig?.response?.paidAt ??
    tx.createdAt;

  const channel = tx.service ?? tx._orig?.response?.channel ?? "-";
  const gateway = tx._orig?.response?.gateway_response ?? "-";
  const last4 = tx._orig?.response?.authorization?.last4 ?? "-";
  const customerEmail = tx._orig?.response?.customer?.email ?? "-";
  const amount = (tx.amount ?? 0).toLocaleString();

  return `<!doctype html>
<html>
<head>
<meta charset="utf-8" />
<title>Receipt ${tx.refId ?? ""}</title>
<meta name="viewport" content="width=device-width, initial-scale=1" />
<style>
  :root { --brand:#0ea5e9; --ink:#0f172a; --muted:#64748b; color-scheme: light; }
  html,body { background:#f8fafc; color:var(--ink); margin:0; font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, 'Helvetica Neue', Arial;}
  .wrap { max-width:780px; margin:28px auto; padding:0 16px; }
  .card { border:1px solid #e5e7eb; border-radius:16px; overflow:hidden; box-shadow:0 4px 16px rgba(2,6,23,.06), 0 1px 2px rgba(2,6,23,.04); background:#fff; }
  .hdr { padding:16px 18px; border-bottom:1px solid #e5e7eb; display:flex; align-items:center; justify-content:space-between; background:#fff; }
  .brand { display:flex; align-items:center; gap:14px; }
  .brand img { width:44px; height:44px; object-fit:contain; }
  .brand-name { font-weight:800; letter-spacing:.2px; }
  .muted { color:var(--muted); }
  .meta { text-align:right; line-height:1.3; }
  /* SECTION WITH AMOUNT — extra vertical space */
  .subhdr { padding:22px 22px; background:#f0f9ff; border-bottom:1px solid #bae6fd; display:flex; align-items:flex-start; justify-content:space-between; }
  .title { font-weight:800; color:var(--brand); margin-bottom:6px; }
  .amount { font-size:28px; font-weight:800; text-align:right; margin:6px 0; }
  .body { padding:18px; background:#fff; }
  .grid { display:grid; grid-template-columns:1fr 1fr; gap:12px 18px; }
  .label { color:var(--muted); font-size:12px; }
  .val { font-size:14px; }
  .footer { padding:12px 18px; border-top:1px solid #e5e7eb; font-size:12px; color:var(--muted); display:flex; justify-content:space-between; background:#fff; }
  @media print { html,body { background:#fff } .wrap{ margin:0 } .card{ box-shadow:none } }
</style>
</head>
<body>
  <div class="wrap">
    <div class="card">
      <div class="hdr">
        <div class="brand">
          ${BRAND.logoUrl ? `<img src="${BRAND.logoUrl}" alt="${BRAND.name} Logo">` : ""}
          <div>
            <div class="brand-name">${BRAND.name}</div>
            <div class="muted">${BRAND.addressLine1}</div>
            <div class="muted">${BRAND.addressLine2}</div>
          </div>
        </div>
        <div class="meta">
          <div><span class="muted">Phone:</span> ${BRAND.phone}</div>
          <div><span class="muted">Email:</span> ${BRAND.email}</div>
          <div><span class="muted">Web:</span> ${BRAND.website}</div>
        </div>
      </div>

      <div class="subhdr">
        <div>
          <div class="title">Payment Receipt</div>
          <div class="muted">Reference: <strong>${tx.refId ?? "-"}</strong></div>
        </div>
        <div class="amount">${tx.currency ?? "NGN"} ${amount}</div>
      </div>

      <div class="body">
        <div class="grid">
          <div><div class="label">Status</div><div class="val">${tx.status ?? "-"}</div></div>
          <div><div class="label">Type</div><div class="val">${(tx.type ?? "").replace(/_/g, " ")}</div></div>
          <div><div class="label">Service</div><div class="val">${channel}</div></div>
          <div><div class="label">Gateway response</div><div class="val">${gateway}</div></div>
          <div><div class="label">Card (last 4)</div><div class="val">${last4}</div></div>
          <div><div class="label">Paid at</div><div class="val">${paidAt ? new Date(paidAt).toLocaleString() : "-"}</div></div>
          <div><div class="label">Customer email</div><div class="val">${customerEmail}</div></div>
        </div>
      </div>

      <div class="footer">
        <div>Generated by ${BRAND.name}</div>
        <div>${new Date().toLocaleString()}</div>
      </div>
    </div>
  </div>
</body>
</html>`;
}

export function downloadReceiptHTML(tx: Tx & { _orig?: any }) {
  const html = buildReceiptHTML(tx);
  const blob = new Blob([html], { type: "text/html" });
  const url = URL.createObjectURL(blob);
  const a = document.createElement("a");
  a.href = url;
  a.download = `receipt_${tx.refId ?? tx.id ?? "transaction"}.html`;
  document.body.appendChild(a);
  a.click();
  a.remove();
  URL.revokeObjectURL(url);
}

export function printReceipt(tx: Tx & { _orig?: any }) {
  const html = buildReceiptHTML(tx);
  const iframe = document.createElement("iframe");
  iframe.style.position = "fixed";
  iframe.style.right = "0";
  iframe.style.bottom = "0";
  iframe.style.width = "0";
  iframe.style.height = "0";
  iframe.style.border = "0";
  iframe.srcdoc = html;
  document.body.appendChild(iframe);

  const cleanup = () => setTimeout(() => {
    try { document.body.removeChild(iframe); } catch { }
  }, 600);

  iframe.onload = () => {
    try {
      iframe.contentWindow?.focus();
      iframe.contentWindow?.print();
    } finally {
      cleanup();
    }
  };
}